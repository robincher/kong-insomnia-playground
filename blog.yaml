type: spec.insomnia.rest/5.0
name: blog
meta:
  id: wrk_091f55df4ce14a07b9aad79d390aad6c
  created: 1744637544138
  modified: 1744637544138
collection:
  - name: Transactions
    meta:
      id: fld_46bd04495f6c4424b8d19c16cc52111a
      created: 1744770126202
      modified: 1744770126202
      sortKey: -1744770126202
      description: Everything about transactions
    children:
      - url: "{{ _.base_url }}/transactions"
        name: List all transactions
        meta:
          id: req_864e45f9f410469788d3dfc266119fdc
          created: 1744770126208
          modified: 1744770126208
          isPrivate: false
          description: Lists all transactions
          sortKey: -1744770126208
        method: GET
        settings:
          renderRequestBody: true
          encodeUrl: true
          followRedirects: global
          cookies:
            send: true
            store: true
          rebuildPath: true
      - url: "{{ _.base_url }}/transactions"
        name: Create new transaction
        meta:
          id: req_5134b822eab64320acaf23c1f04f1eab
          created: 1744770126210
          modified: 1744770126210
          isPrivate: false
          description: Initiate a transaction
          sortKey: -1744770126210
        method: POST
        body:
          mimeType: application/json
          text: |-
            {
              "id": 42,
              "source": "GR872659435350353",
              "senderName": "Max Mustermann",
              "destination": "DE8412325587359375895",
              "amount": 42,
              "currency": "EUR",
              "subject": "Invoice #42-08/15"
            }
        headers:
          - name: Content-Type
            disabled: false
            value: application/json
        settings:
          renderRequestBody: true
          encodeUrl: true
          followRedirects: global
          cookies:
            send: true
            store: true
          rebuildPath: true
      - url: "{{ _.base_url }}/transactions/{{ _.id }}"
        name: Get specific transactions
        meta:
          id: req_c40da2afd64144e1a89d21388b6283e2
          created: 1744770126212
          modified: 1744770126212
          isPrivate: false
          description: Returns a post by id
          sortKey: -1744770126212
        method: GET
        settings:
          renderRequestBody: true
          encodeUrl: true
          followRedirects: global
          cookies:
            send: true
            store: true
          rebuildPath: true
      - url: "{{ _.base_url }}/transactions/{{ _.id }}"
        name: Update a transaction
        meta:
          id: req_e280fd88003e440c8849db48248dbb61
          created: 1744770126215
          modified: 1744770126215
          isPrivate: false
          description: Change a transaction
          sortKey: -1744770126215
        method: PATCH
        body:
          mimeType: application/json
          text: |-
            {
              "id": 42,
              "source": "GR872659435350353",
              "senderName": "Max Mustermann",
              "destination": "DE8412325587359375895",
              "amount": 42,
              "currency": "EUR",
              "subject": "Invoice #42-08/15"
            }
        headers:
          - name: Content-Type
            disabled: false
            value: application/json
        settings:
          renderRequestBody: true
          encodeUrl: true
          followRedirects: global
          cookies:
            send: true
            store: true
          rebuildPath: true
      - url: "{{ _.base_url }}/transactions/{{ _.id }}"
        name: Cancel a transaction
        meta:
          id: req_1e61193638bd447e8dc2eb59fb7c94aa
          created: 1744770126218
          modified: 1744770126218
          isPrivate: false
          description: Cancel a transaction
          sortKey: -1744770126218
        method: DELETE
        settings:
          renderRequestBody: true
          encodeUrl: true
          followRedirects: global
          cookies:
            send: true
            store: true
          rebuildPath: true
  - url: " https://keycloak.apim.eu/auth/realms/kong/protocol/openid-connect/token"
    name: Get Access Token
    meta:
      id: req_8d334605528b42a3be66de43fbea1c88
      created: 1744638427682
      modified: 1744639297928
      isPrivate: false
      sortKey: -1744638427682
    method: POST
    body:
      mimeType: application/x-www-form-urlencoded
      params:
        - name: client_secret
          value: aeb992d5-4be4-4125-857b-6210776321d2
          disabled: false
          id: pair_e69059167a444a6e83e1e6af1b55a9d1
        - name: client_id
          value: client1
          disabled: false
          id: pair_e0857b0baed0461aa6bf014ba7d3568d
        - name: grant_type
          value: password
          disabled: false
          id: pair_0f6697a28c404f329fbd7e78c709abbb
        - name: password
          value: KongRul3z!
          disabled: false
          id: pair_3fc9e64bfc314d1abb2f622aedfcb8e3
        - name: username
          value: demo
          disabled: false
          id: pair_a65f2ca588af485b982a4dc81c7719ae
    headers:
      - name: Content-Type
        value: application/x-www-form-urlencoded
      - name: User-Agent
        value: insomnia/11.0.2
    scripts:
      afterResponse: |-
        const jsonBody = insomnia.response.json();
        insomnia.environment.set("access_token", jsonBody.access_token);
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
  - url: "{{ _['DP:8000'] }}/oidcIntrospection"
    name: Introspection
    meta:
      id: req_2c941c259151445cbf22209d3a39a8ed
      created: 1744639333256
      modified: 1744770427559
      isPrivate: false
      sortKey: -1744639333256
    method: GET
    headers:
      - name: User-Agent
        value: insomnia/11.0.2
    authentication:
      type: bearer
      prefix: Bearer
      token: "{{ _.access_token }}"
      disabled: false
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
cookieJar:
  name: Default Jar
  meta:
    id: jar_b3e4e82e6e9bcafd51e371908016c12375fae6f8
    created: 1744637544143
    modified: 1744770376921
  cookies:
    - key: KC_RESTART
      maxAge: 0
      domain: keycloak.apim.eu
      path: /auth/realms/kong/
      httpOnly: true
      extensions:
        - Version=1
      hostOnly: true
      creation: 2025-04-14T14:01:40.612Z
      lastAccessed: 2025-04-16T02:26:16.910Z
      id: ef5b5f20-cf4e-4cc6-9eb2-df93247c2cc8
    - id: 43c43492-95cd-48e1-9064-af14d22d5d25
      key: KC_RESTART
      domain: keycloak.apim.eu
      path: /auth/realms/kong/
      secure: false
      httpOnly: true
      creation: 2025-04-14T14:01:40.612Z
      hostOnly: true
      lastAccessed: 2025-04-16T02:24:33.410Z
environments:
  name: Base Environment
  meta:
    id: env_b3e4e82e6e9bcafd51e371908016c12375fae6f8
    created: 1744637544142
    modified: 1744770506418
    isPrivate: false
  data:
    base_url: "{{ _.scheme }}://{{ _.host }}{{ _.base_path }}"
    access_token: eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICIwbWVEV1VXbXZtcWg4cGNiQVgzUkxyMV9FSW9rQWV5cFA2dFN0M3Z5YXUwIn0.eyJqdGkiOiJkNmNmMTliMy03OWQ4LTRkZmEtOWI5ZS0wNTgyYTAwY2ZmYWUiLCJleHAiOjE3NDQ3NzA2NzYsIm5iZiI6MCwiaWF0IjoxNzQ0NzcwMzc2LCJpc3MiOiJodHRwczovL2tleWNsb2FrLmFwaW0uZXUvYXV0aC9yZWFsbXMva29uZyIsImF1ZCI6ImFjY291bnQiLCJzdWIiOiI1NjQ0MzgxYy0zN2MyLTRkMmUtODg3OS1mYmUzZjFkOWE4N2UiLCJ0eXAiOiJCZWFyZXIiLCJhenAiOiJjbGllbnQxIiwiYXV0aF90aW1lIjowLCJzZXNzaW9uX3N0YXRlIjoiYjY5NDdkYzktYTdhMC00YzJjLTk0MmMtZjBiMmNjMzQ2MDFkIiwiYWNyIjoiMSIsInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJrb25nX3JvbGUiLCJvZmZsaW5lX2FjY2VzcyIsInVtYV9hdXRob3JpemF0aW9uIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsiYWNjb3VudCI6eyJyb2xlcyI6WyJtYW5hZ2UtYWNjb3VudCIsIm1hbmFnZS1hY2NvdW50LWxpbmtzIiwidmlldy1wcm9maWxlIl19fSwic2NvcGUiOiJwcm9maWxlIGtvbmdfYXBpX2FjY2VzcyBlbWFpbCIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJyb2xlcyI6WyJrb25nX3JvbGUiLCJvZmZsaW5lX2FjY2VzcyIsInVtYV9hdXRob3JpemF0aW9uIl0sIm5hbWUiOiJLb25nIERlbW8iLCJncm91cHMiOlsia29uZ2VycyJdLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJkZW1vIiwiZ2l2ZW5fbmFtZSI6IktvbmciLCJmYW1pbHlfbmFtZSI6IkRlbW8iLCJlbWFpbCI6ImRlbW9AYXBpbS5ldSJ9.A2toJS8kFHk0S4kkeMeEfAsTXzLR_kNX_DrN5LHWeZALxXVcmtVf1PWlLR1atET1tqcOYKqg_KSMa55r1OrTDD_CaOwYiTuQAidHcavGyqsM5u9Dfmtxd_Rofwpi8Hni3iKheLa-et411TTk2X6ksNLJCRUmhejycGBJtyOdSmCYWzcrqlBjK8WBaCUKe7sfMJOuBhkseaLnGjybSyVRMXapwjCg39h-ycN6E7pH6LgSFoPOrNXzj4vy55KLvcT00lYXo7aC6BXkdI2QSi8BRLqhTNxuOBQATVU4tCUeXAPNVwXN5lsQKft13om3JtIqks0LOzmxgeGM4gHjWFDl1A
  subEnvironments:
    - name: OpenAPI env localhost:3000
      meta:
        id: env_b636af090e464c5e84935daac1a471d9
        created: 1744637828166
        modified: 1744637828166
        isPrivate: false
        sortKey: 1744637828166
      data:
        scheme: http
        host: localhost:3000
        apikey: apikey
        bearerToken: bearerToken
    - name: OpenAPI env localhost:3000
      meta:
        id: env_8e173a2956274f3d974cfb357f1a808b
        created: 1744770126200
        modified: 1744770126200
        isPrivate: false
        sortKey: 1744770126200
      data:
        scheme: http
        host: localhost:3000
        apikey: apikey
        bearerToken: bearerToken
spec:
  contents:
    openapi: 3.0.1
    info:
      version: 1.1.0
      title: Transactions API of BanKonG
      description: >
        This API provides you access to the transactions of a logged in user.
        You can get, create, change and delete transactions (of course always
        depending on permissions).


        :closed_lock_with_key: this api is protected by either OpenID Connect or api-key


        :bulb: this API is rate limited
      contact:
        name: BanKong PointOfContact
        url: http://www.bankong.com/support
        email: support@bankong.com
    servers:
      - url: http://localhost:3000
        description: local sandbox environment
    tags:
      - name: Transactions
        description: Everything about transactions
        externalDocs:
          url: http://docs.bankong.com/transations
    paths:
      /transactions:
        get:
          description: Lists all transactions
          summary: List all transactions
          tags:
            - Transactions
          operationId: listTranactions
          responses:
            "200":
              description: List of transactions
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/TransactionsList"
        post:
          description: Initiate a transaction
          summary: Create new transaction
          tags:
            - Transactions
          operationId: initiateTransaction
          requestBody:
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: "#/components/schemas/Transaction"
          responses:
            "200":
              description: initiated transaction
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Transaction"
      "/transactions/{id}":
        get:
          description: Returns a post by id
          summary: Get specific transactions
          tags:
            - Transactions
          operationId: getTransaction
          parameters:
            - name: id
              in: path
              required: true
              description: The transaction id.
              schema:
                $ref: "#/components/schemas/TransactionId"
          responses:
            "200":
              description: Transaction received
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Transaction"
            "404":
              description: Transaction not found
        patch:
          description: Change a transaction
          summary: Update a transaction
          tags:
            - Transactions
          operationId: changeTransaction
          requestBody:
            content:
              application/json; charset=utf-8:
                schema:
                  $ref: "#/components/schemas/Transaction"
          parameters:
            - name: id
              in: path
              required: true
              description: The transaction id.
              schema:
                $ref: "#/components/schemas/TransactionId"
          responses:
            "200":
              description: Transaction changed
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Transaction"
            "404":
              description: Transaction not found
        delete:
          description: Cancel a transaction
          summary: Cancel a transaction
          tags:
            - Transactions
          operationId: cancelTransaction
          parameters:
            - name: id
              in: path
              required: true
              description: The transaction id.
              schema:
                $ref: "#/components/schemas/TransactionId"
          responses:
            "200":
              description: Transaction cancelled
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Transaction"
            "404":
              description: Transaction not found
    components:
      schemas:
        TransactionId:
          type: integer
          description: Unique identifier for the transaction. This identifier is both
            unique and immutable.
          example: 42
        TransactionsList:
          type: array
          items:
            $ref: "#/components/schemas/Transaction"
        Transaction:
          type: object
          required:
            - id
            - source
            - senderName
            - destination
            - amount
            - currency
            - subject
          properties:
            id:
              $ref: "#/components/schemas/TransactionId"
            source:
              type: string
              description: The IBAN of the sending account
              pattern: ^[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}$
              example: GR872659435350353
            senderName:
              type: string
              example: Max Mustermann
            destination:
              type: string
              description: The IBAN of the receiving account
              pattern: ^[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}$
              example: DE8412325587359375895
            amount:
              description: The amount of the transaction. Cannot be negative
              type: number
              minimum: 0.01
              multipleOf: 0.01
              example: 42
            currency:
              description: A code allocated to a currency by a Maintenance Agency under an
                international identification scheme, as described in the latest
                edition of the international standard ISO 4217
              type: string
              pattern: ^[A-Z]{3,3}$
              example: EUR
            subject:
              type: string
              description: Description that may be available for the statement fee.
              minLength: 0
              maxLength: 128
              example: "Invoice #42-08/15"
      securitySchemes:
        ApiKeyAuth:
          type: apiKey
          in: header
          name: apikey
        OIDC:
          type: http
          scheme: bearer
          bearerFormat: JWT
  meta:
    id: spc_9a0850c3fcc94b8cb492005ffe725a6b
    created: 1744637544141
    modified: 1744769985760
testSuites:
  - name: New Suite
    meta:
      id: uts_e9efeb7119c34d0b8d5cb80b0770ff24
      created: 1744638243787
      modified: 1744638243787
      sortKey: -1744638243787
    tests:
      - name: Returns 200
        meta:
          id: ut_8aa469392fe942e4802cb2f64e7bad40
          created: 1744638246177
          modified: 1744638280377
          sortKey: -1744638246177
        code: |
          const response1 = await insomnia.send();
          expect(response1.status).to.equal(200);
          // Parse the response body as JSON
          const body = JSON.parse(response1.data);

          // Check the response time
          expect(response1.responseTime).to.be.at.most(2000);

          expect(body).to.be.an('array');

          body.forEach((item) => {
            expect(item).to.have.property('id');
          });
          // Check the existence of specific properties
      - name: Returns 200
        meta:
          id: ut_0da903e07d9c4af29112c5c6ecd9475d
          created: 1744638277267
          modified: 1744770271068
          sortKey: -1744638277268
        requestId: req_8d334605528b42a3be66de43fbea1c88
        code: |
          const response1 = await insomnia.send();
          expect(response1.status).to.equal(200);
          // Parse the response body as JSON
          const body = JSON.parse(response1.data);

          // Check the response time
          expect(response1.responseTime).to.be.at.most(2000);

          expect(body).to.be.an('array');

          body.forEach((item) => {
            expect(item).to.have.property('id');
          });
          // Check the existence of specific properties
